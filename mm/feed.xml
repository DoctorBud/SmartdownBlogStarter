<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="/SmartdownBlogStarter/mm/feed.xml" rel="self" type="application/atom+xml" /><link href="/SmartdownBlogStarter/mm/" rel="alternate" type="text/html" /><updated>2020-03-15T19:40:11-07:00</updated><id>/SmartdownBlogStarter/mm/feed.xml</id><title type="html">MM</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>First Lastname</name></author><entry><title type="html">A Brief Tour of Smartdown</title><link href="/SmartdownBlogStarter/mm/posts/ABriefTourOfSmartdown/" rel="alternate" type="text/html" title="A Brief Tour of Smartdown" /><published>2020-02-04T00:00:00-08:00</published><updated>2020-02-04T00:00:00-08:00</updated><id>/SmartdownBlogStarter/mm/posts/ABriefTourOfSmartdown</id><content type="html" xml:base="/SmartdownBlogStarter/mm/posts/ABriefTourOfSmartdown/"># WelcomeToSmartdown
---

## Welcome to Smartdown

Smartdown is an extension of Markdown that includes several additions:
- Technical notation support, including [MathJax](https://www.mathjax.org) LaTeX and AsciiMath syntax, chemical notation via [`mhchem`](https://mhchem.github.io/MathJax-mhchem/),
- Syntax highlighting via [highlight.js](https://highlightjs.org).
- Reactive cells similar to those in a spreadsheet, but inline with Smartdown prose. These cells can be used for input, output, calculation, and for interacting with internet APIs such as Wikidata.
- Media embedding support including Images, Tweets, SVG, Video.
- [P5JS](https://p5js.org) to support drawing-based visualizations, games, and sound.
- [Plotly.js](https://plot.ly/javascript/) to support data visualizations including various plots, charts, and maps.
- [Leaflet.js](http://leafletjs.com) for easy embedding of geo-based data and maps.
- [Graphviz via `viz.js`](http://viz-js.com) diagrams are a standard format used for technical and scientific diagrams
- Much MuchMuchMuchMuch more


### Map of functionality

Use the navigation buttons below to explore different aspects of Smartdown.

- [Math](:@Math)
- [Plotly](:@Plotly)
- [Cells](:@Cells)
- [SVG](:@SVG)

Note that the above links are intra-document links in a MultiCard Smartdown document.

The links below, however, are inter-document links between one Smartdown document, and another. In both of these cases, no page-reload occurs and state is maintained.

[Smartdown Tour](:@/posts/ABriefTourOfSmartdown.md)
[Welcome To My Blog](:@/posts/WelcomeToMyBlog.md)

### GIF Example

I'm experimenting with incorporating GIFs for the purpose of building a tutorial. Below is a short video of the [Smartdown Viewer](https://smartdown.site) being used to edit Smartdown:

![player](/assets/images/Intro.gif)

---

The source for this page is at [`/posts/ABriefTourOfSmartdown.md`](/posts/ABriefTourOfSmartdown.md).


# SVG
---

Smartdown allows SVG images to be registered and preprocessd so that they can be dynamically styled. For this example, we incorporate an SVG from [Wikimedia Hypercube](https://commons.wikimedia.org/wiki/File:Hypercube.svg).

We can use ordinary Markdown image syntax:

![](https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/Hypercube.svg/500px-Hypercube.svg.png)

Or, we can use Smartdowns `/media` syntax and amend it with styling:

|hypercube|pulse|clockwise|cclockwise|bluegreen|
|:---:|:---:|:---:|:---:|:---:|
|![](/media/hypercube)|![](/media/hypercube/pulse)|![](/media/hypercube/clockwise)|![](/media/hypercube/cclockwise)|![](/media/hypercube/bluegreen)|
|![](/media/StalactiteStalagmite)|![](/media/StalactiteStalagmite/pulse)|![](/media/StalactiteStalagmite/clockwise)|![](/media/StalactiteStalagmite/cclockwise)|![](/media/StalactiteStalagmite/bluegreen)|

---

[Back to Home](:@WelcomeToSmartdown)


# Math
---

#### Math Example

By using MathJax, we can display all sorts of notation.

We can do inline math: $E = mc^2$

Or we can do block math:

$$
A \longrightarrow B
$$

$$
\begin{array}{c|lcr}
n &amp; \text{Left} &amp; \text{Center} &amp; \text{Right} \\
\hline
1 &amp; 0.24 &amp; 1 &amp; 125 \\
2 &amp; -1 &amp; 189 &amp; -8 \\
3 &amp; -20 &amp; 2000 &amp; 1+10i
\end{array}
$$

And even diagrams via *xyjax*:

$$
\begin{xy}
0;&lt;1em,0em&gt;:
(1,1);p+/v a(18) 5.5em/**@{-},
(1,3);p+/v a(18) 5.5em/**@2{-},
(1,5);p+/v a(18) 5.5em/**@3{-},
(1,9);p+/v a(18) 5.5em/**@{.},
(1,11);p+/v a(18) 5.5em/**@2{.},
(1,13);p+/v a(18) 5.5em/**@3{..},
\end{xy}
$$

#### MathJax $\LaTeX$ vs AsciiMath Syntax

Recently, I learned that MathJax had an alternative syntax, [AsciiMath](http://asciimath.org) that is simpler for many purposes. Smartdown has enabled this feature, although we are currently using `@` as the delimiter instead of \` or `$`.

##### $\LaTeX$ Syntax

Currently, Smartdown uses LaTeX-style math syntax, so the following formula:

$$
\sum_{i=1}^{n} i^3=\left(\frac{n(n+1)}{2}\right)^2
$$

is expressed as:

```
$$
\sum_{i=1}^{n} i^3=\left(\frac{n(n+1)}{2}\right)^2
$$
```

##### AsciiMath Syntax

The above formula is expressed in AsciiMath (using `@` as delimiters) as:

```
@sum_(i=1)^n i^3=((n(n+1))/2)^2@
```

which Smartdown now renders as:

@sum_(i=1)^n i^3=((n(n+1))/2)^2@

Note that AsciiMath via MathJax does not support *display-mode* equations, but centering can be achieved via Markdown table syntax:


|`@sum_(i=1)^n i^3=((n(n+1))/2)^2@`|
|:---:|
|@sum_(i=1)^n i^3=((n(n+1))/2)^2@|


---

[Back to Home](:@WelcomeToSmartdown)


# Mermaid
---

```mermaid/playable

%% Example of sequence diagram

graph LR
    id1((This is the text in the circle));
```

---


```mermaid/playable
graph TB
   subgraph one
   a1--&gt;a2{Rhombus}
   end
   subgraph two
   b1--&gt;b2[This is a really long label.]
   end
   subgraph three
   c1--&gt;c2
   end
   c1--&gt;a2
```

We can do inline math: $E = mc^2$

---

[Back to Home](:@WelcomeToSmartdown)


# Cells
---


## Cells - Reactive Spreadsheet Cells

Smartdown uses ordinary Markdown link syntax to specify a cell *label* and *body*, where the *label* is specified in the link label, and the *body* is specified in the link's URL. For example, the following declares an *output* cell that displays the value of the `FOO` variable:

```markdown
[The value of FOO is](:!FOO)
```

When a non-empty label is present, the cell will be formatted with its label on its own line. When no label is present, then the cell will be formatted inline.

### Cells with labels get their own line

- [What is your name?](:?NAME)
- [Glad to meet you](:!NAME)
- [What is your name again?](:?NAME)
- [Really glad to meet you](:!NAME)
- [Are you human?](:XHUMAN)
- [Humanity](:!HUMAN)


### Cells with no labels are inlined

What is your name? [](:?NAME) So glad to meet you [](:!NAME). What is your name again? [](:?NAME) Really glad to meet you [](:!NAME).
Are you human? [](:XHUMAN) Your Humanity is [](:!HUMAN).



### External Data Query

*The Smartdown code below is a work in progress and the syntax used is experimental and in flux.*

One of the goals of Smartdown is to enable simple text files to express rich interactive experiences that involve live data. Ideally, web-based services would already exist to serve the data-hunger of Smartdown. In this example, we are exploring the use of [Wikidata](https://www.wikidata.org) as a data source.

Limitations of the current tech include:

- The [Falcor](https://netflix.github.io/falcor/) syntax is a hack and is not using the Falcor library.
- The current example emphasizes the extraction of thumbnail images from Wikidata and does not display or utilize the full set of metadata returned.

[WHAT do you want to look up?](:?WHAT)

Examples:
- Earth
- Penguin
- Uranium
- Oregon
- Abraham Lincoln
- [`WHAT`](:=LOOKUP=/wikidata[&quot;`WHAT`&quot;])
- [`WHAT` thumbnails](:=LOOKUP=/wikidataThumbs[&quot;`WHAT`&quot;])
- [`WHAT` images](:=LOOKUP=/wikidataImages[&quot;`WHAT`&quot;])


- [Albert Einstein|Marie Curie|Max Plank (Slash, Thumbnails)](:=LOOKUP=/wikidataThumbs/Albert%20Einstein|Marie%20Curie|Max%20Plank)
- [Albert Einstein (Falcor, Thumbnails)](:=LOOKUP=/wikidataThumbs[&quot;Albert%20Einstein&quot;])
- [Albert Einstein|Marie Curie|Max Plank (Slash, Original)](:=LOOKUP=/wikidataImages/Albert%20Einstein|Marie%20Curie|Max%20Plank)
- [Albert Einstein (Falcor, Original)](:=LOOKUP=/wikidataImages[&quot;Albert%20Einstein&quot;])
- [Lookup result](:!LOOKUP)

---

[](:!LOOKUP)

---

[Back to Home](:@WelcomeToSmartdown)


# Plotly
---

## Plotly.js Experiments

The current integration of [plotly.js](https://plot.ly/javascript/) is fairly raw, and you may encounter problems with autolayout/sizing as well as other features I haven't tested or fixed.

### Hello World

Here is the [Hello World](https://plot.ly/javascript/getting-started/#hello-world-example) example.


```plotly/playable
var layout = {
    title: 'Simple Line Graph',
    autosize: true,
    // width: 500,
    // height: 300,
    margin: {
      t: 100, b: 0, l: 0, r: 0
    }
};

Plotly.plot( this.div, [{
    x: [1, 2, 3, 4, 5],
    y: [1, 2, 4, 8, 16] }], layout,
    {displayModeBar: true} );

```

### Maps

From [Chloropleth Map](https://plot.ly/javascript/choropleth-maps)

```plotly/playable

var myDiv = this.div;
Plotly.d3.csv(
  'https://raw.githubusercontent.com/plotly/datasets/master/2010_alcohol_consumption_by_country.csv',
  function(err, rows) {
    function unpack(rows, key) {
      return rows.map(function(row) { return row[key]; });
    }

    var data = [{
      type: 'choropleth',
      locationmode: 'country names',
      locations: unpack(rows, 'location'),
      z: unpack(rows, 'alcohol'),
      text: unpack(rows, 'location'),
      autocolorscale: true
    }];

    var layout = {
      autosize: true,
      title: 'Pure alcohol consumption among adults (age 15+) in 2010',
      geo: {
        projection: {
          type: 'robinson'
        }
      }
    };

    Plotly.newPlot(myDiv, data, layout, {showLink: false, displayModeBar: true});
  });

```

---

[Back to Home](:@WelcomeToSmartdown)</content><author><name>First Lastname</name></author><category term="welcome" /><category term="smartdown" /><summary type="html"># WelcomeToSmartdown --- ## Welcome to Smartdown Smartdown is an extension of Markdown that includes several additions: - Technical notation support, including [MathJax](https://www.mathjax.org) LaTeX and AsciiMath syntax, chemical notation via [`mhchem`](https://mhchem.github.io/MathJax-mhchem/), - Syntax highlighting via [highlight.js](https://highlightjs.org). - Reactive cells similar to those in a spreadsheet, but inline with Smartdown prose. These cells can be used for input, output, calculation, and for interacting with internet APIs such as Wikidata. - Media embedding support including Images, Tweets, SVG, Video. - [P5JS](https://p5js.org) to support drawing-based visualizations, games, and sound. - [Plotly.js](https://plot.ly/javascript/) to support data visualizations including various plots, charts, and maps. - [Leaflet.js](http://leafletjs.com) for easy embedding of geo-based data and maps. - [Graphviz via `viz.js`](http://viz-js.com) diagrams are a standard format used for technical and scientific diagrams - Much MuchMuchMuchMuch more ### Map of functionality Use the navigation buttons below to explore different aspects of Smartdown. - [Math](:@Math) - [Plotly](:@Plotly) - [Cells](:@Cells) - [SVG](:@SVG) Note that the above links are intra-document links in a MultiCard Smartdown document. The links below, however, are inter-document links between one Smartdown document, and another. In both of these cases, no page-reload occurs and state is maintained. [Smartdown Tour](:@/posts/ABriefTourOfSmartdown.md) [Welcome To My Blog](:@/posts/WelcomeToMyBlog.md) ### GIF Example I'm experimenting with incorporating GIFs for the purpose of building a tutorial. Below is a short video of the [Smartdown Viewer](https://smartdown.site) being used to edit Smartdown: ![player](/assets/images/Intro.gif) --- The source for this page is at [`/posts/ABriefTourOfSmartdown.md`](/posts/ABriefTourOfSmartdown.md). # SVG --- Smartdown allows SVG images to be registered and preprocessd so that they can be dynamically styled. For this example, we incorporate an SVG from [Wikimedia Hypercube](https://commons.wikimedia.org/wiki/File:Hypercube.svg). We can use ordinary Markdown image syntax: ![](https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/Hypercube.svg/500px-Hypercube.svg.png) Or, we can use Smartdowns `/media` syntax and amend it with styling: |hypercube|pulse|clockwise|cclockwise|bluegreen| |:---:|:---:|:---:|:---:|:---:| |![](/media/hypercube)|![](/media/hypercube/pulse)|![](/media/hypercube/clockwise)|![](/media/hypercube/cclockwise)|![](/media/hypercube/bluegreen)| |![](/media/StalactiteStalagmite)|![](/media/StalactiteStalagmite/pulse)|![](/media/StalactiteStalagmite/clockwise)|![](/media/StalactiteStalagmite/cclockwise)|![](/media/StalactiteStalagmite/bluegreen)| --- [Back to Home](:@WelcomeToSmartdown) # Math --- #### Math Example By using MathJax, we can display all sorts of notation. We can do inline math: $E = mc^2$ Or we can do block math: $$ A \longrightarrow B $$ $$ \begin{array}{c|lcr} n &amp; \text{Left} &amp; \text{Center} &amp; \text{Right} \\ \hline 1 &amp; 0.24 &amp; 1 &amp; 125 \\ 2 &amp; -1 &amp; 189 &amp; -8 \\ 3 &amp; -20 &amp; 2000 &amp; 1+10i \end{array} $$ And even diagrams via *xyjax*: $$ \begin{xy} 0;: (1,1);p+/v a(18) 5.5em/**@{-}, (1,3);p+/v a(18) 5.5em/**@2{-}, (1,5);p+/v a(18) 5.5em/**@3{-}, (1,9);p+/v a(18) 5.5em/**@{.}, (1,11);p+/v a(18) 5.5em/**@2{.}, (1,13);p+/v a(18) 5.5em/**@3{..}, \end{xy} $$ #### MathJax $\LaTeX$ vs AsciiMath Syntax Recently, I learned that MathJax had an alternative syntax, [AsciiMath](http://asciimath.org) that is simpler for many purposes. Smartdown has enabled this feature, although we are currently using `@` as the delimiter instead of \` or `$`. ##### $\LaTeX$ Syntax Currently, Smartdown uses LaTeX-style math syntax, so the following formula: $$ \sum_{i=1}^{n} i^3=\left(\frac{n(n+1)}{2}\right)^2 $$ is expressed as: ``` $$ \sum_{i=1}^{n} i^3=\left(\frac{n(n+1)}{2}\right)^2 $$ ``` ##### AsciiMath Syntax The above formula is expressed in AsciiMath (using `@` as delimiters) as: ``` @sum_(i=1)^n i^3=((n(n+1))/2)^2@ ``` which Smartdown now renders as: @sum_(i=1)^n i^3=((n(n+1))/2)^2@ Note that AsciiMath via MathJax does not support *display-mode* equations, but centering can be achieved via Markdown table syntax: |`@sum_(i=1)^n i^3=((n(n+1))/2)^2@`| |:---:| |@sum_(i=1)^n i^3=((n(n+1))/2)^2@| --- [Back to Home](:@WelcomeToSmartdown) # Mermaid --- ```mermaid/playable %% Example of sequence diagram graph LR id1((This is the text in the circle)); ``` --- ```mermaid/playable graph TB subgraph one a1--&gt;a2{Rhombus} end subgraph two b1--&gt;b2[This is a really long label.] end subgraph three c1--&gt;c2 end c1--&gt;a2 ``` We can do inline math: $E = mc^2$ --- [Back to Home](:@WelcomeToSmartdown) # Cells --- ## Cells - Reactive Spreadsheet Cells Smartdown uses ordinary Markdown link syntax to specify a cell *label* and *body*, where the *label* is specified in the link label, and the *body* is specified in the link's URL. For example, the following declares an *output* cell that displays the value of the `FOO` variable: ```markdown [The value of FOO is](:!FOO) ``` When a non-empty label is present, the cell will be formatted with its label on its own line. When no label is present, then the cell will be formatted inline. ### Cells with labels get their own line - [What is your name?](:?NAME) - [Glad to meet you](:!NAME) - [What is your name again?](:?NAME) - [Really glad to meet you](:!NAME) - [Are you human?](:XHUMAN) - [Humanity](:!HUMAN) ### Cells with no labels are inlined What is your name? [](:?NAME) So glad to meet you [](:!NAME). What is your name again? [](:?NAME) Really glad to meet you [](:!NAME). Are you human? [](:XHUMAN) Your Humanity is [](:!HUMAN). ### External Data Query *The Smartdown code below is a work in progress and the syntax used is experimental and in flux.* One of the goals of Smartdown is to enable simple text files to express rich interactive experiences that involve live data. Ideally, web-based services would already exist to serve the data-hunger of Smartdown. In this example, we are exploring the use of [Wikidata](https://www.wikidata.org) as a data source. Limitations of the current tech include: - The [Falcor](https://netflix.github.io/falcor/) syntax is a hack and is not using the Falcor library. - The current example emphasizes the extraction of thumbnail images from Wikidata and does not display or utilize the full set of metadata returned. [WHAT do you want to look up?](:?WHAT) Examples: - Earth - Penguin - Uranium - Oregon - Abraham Lincoln - [`WHAT`](:=LOOKUP=/wikidata[&quot;`WHAT`&quot;]) - [`WHAT` thumbnails](:=LOOKUP=/wikidataThumbs[&quot;`WHAT`&quot;]) - [`WHAT` images](:=LOOKUP=/wikidataImages[&quot;`WHAT`&quot;]) - [Albert Einstein|Marie Curie|Max Plank (Slash, Thumbnails)](:=LOOKUP=/wikidataThumbs/Albert%20Einstein|Marie%20Curie|Max%20Plank) - [Albert Einstein (Falcor, Thumbnails)](:=LOOKUP=/wikidataThumbs[&quot;Albert%20Einstein&quot;]) - [Albert Einstein|Marie Curie|Max Plank (Slash, Original)](:=LOOKUP=/wikidataImages/Albert%20Einstein|Marie%20Curie|Max%20Plank) - [Albert Einstein (Falcor, Original)](:=LOOKUP=/wikidataImages[&quot;Albert%20Einstein&quot;]) - [Lookup result](:!LOOKUP) --- [](:!LOOKUP) --- [Back to Home](:@WelcomeToSmartdown) # Plotly --- ## Plotly.js Experiments The current integration of [plotly.js](https://plot.ly/javascript/) is fairly raw, and you may encounter problems with autolayout/sizing as well as other features I haven't tested or fixed. ### Hello World Here is the [Hello World](https://plot.ly/javascript/getting-started/#hello-world-example) example. ```plotly/playable var layout = { title: 'Simple Line Graph', autosize: true, // width: 500, // height: 300, margin: { t: 100, b: 0, l: 0, r: 0 } }; Plotly.plot( this.div, [{ x: [1, 2, 3, 4, 5], y: [1, 2, 4, 8, 16] }], layout, {displayModeBar: true} ); ``` ### Maps From [Chloropleth Map](https://plot.ly/javascript/choropleth-maps) ```plotly/playable var myDiv = this.div; Plotly.d3.csv( 'https://raw.githubusercontent.com/plotly/datasets/master/2010_alcohol_consumption_by_country.csv', function(err, rows) { function unpack(rows, key) { return rows.map(function(row) { return row[key]; }); } var data = [{ type: 'choropleth', locationmode: 'country names', locations: unpack(rows, 'location'), z: unpack(rows, 'alcohol'), text: unpack(rows, 'location'), autocolorscale: true }]; var layout = { autosize: true, title: 'Pure alcohol consumption among adults (age 15+) in 2010', geo: { projection: { type: 'robinson' } } }; Plotly.newPlot(myDiv, data, layout, {showLink: false, displayModeBar: true}); }); ``` --- [Back to Home](:@WelcomeToSmartdown)</summary></entry><entry><title type="html">Plain Old Markdown</title><link href="/SmartdownBlogStarter/mm/posts/PlainOldMarkdown/" rel="alternate" type="text/html" title="Plain Old Markdown" /><published>2020-02-03T00:00:00-08:00</published><updated>2020-02-03T00:00:00-08:00</updated><id>/SmartdownBlogStarter/mm/posts/PlainOldMarkdown</id><content type="html" xml:base="/SmartdownBlogStarter/mm/posts/PlainOldMarkdown/">## GitHub-Flavored Markdown with Kramdown

BlogKit supports the standard [GitHub-flavored Markdown](https://help.github.com/articles/about-writing-and-formatting-on-github/) provided by GitHub Pages. Specifically, GitHub Pages uses the [kramdown](https://kramdown.gettalong.org/quickref.html) processor to convert Markdown into HTML within the GitHub Pages server.

### Markdown Examples

Here are some simple examples of Markdown.

#### Styles

It's very easy to make some words **bold** and other words *italic* with Markdown. You can even [link to Google!](http://google.com)

*This text will be italic*
_This will also be italic_

**This text will be bold**
__This will also be bold__

_You **can** combine them_

#### Tables

First Header | Second Header
------------ | -------------
Content from cell 1 | Content from cell 2
Content in the first column | Content in the second column

---

The source for this page is at [`/posts/PlainOldMarkdown.md`](/SmartdownBlogStarter/mm/posts/PlainOldMarkdown.md){:target=&quot;_blank&quot;}.</content><author><name>First Lastname</name></author><category term="markdown" /><summary type="html">## GitHub-Flavored Markdown with Kramdown BlogKit supports the standard [GitHub-flavored Markdown](https://help.github.com/articles/about-writing-and-formatting-on-github/) provided by GitHub Pages. Specifically, GitHub Pages uses the [kramdown](https://kramdown.gettalong.org/quickref.html) processor to convert Markdown into HTML within the GitHub Pages server. ### Markdown Examples Here are some simple examples of Markdown. #### Styles It's very easy to make some words **bold** and other words *italic* with Markdown. You can even [link to Google!](http://google.com) *This text will be italic* _This will also be italic_ **This text will be bold** __This will also be bold__ _You **can** combine them_ #### Tables First Header | Second Header ------------ | ------------- Content from cell 1 | Content from cell 2 Content in the first column | Content in the second column --- The source for this page is at [`/posts/PlainOldMarkdown.md`](/SmartdownBlogStarter/mm/posts/PlainOldMarkdown.md){:target=&quot;_blank&quot;}.</summary></entry><entry><title type="html">Welcome to My Smartdown-enabled Blog</title><link href="/SmartdownBlogStarter/mm/posts/WelcomeToMyBlog/" rel="alternate" type="text/html" title="Welcome to My Smartdown-enabled Blog" /><published>2020-02-02T00:00:00-08:00</published><updated>2020-02-02T00:00:00-08:00</updated><id>/SmartdownBlogStarter/mm/posts/WelcomeToMyBlog</id><content type="html" xml:base="/SmartdownBlogStarter/mm/posts/WelcomeToMyBlog/">## Welcome to My Smartdown-enabled Blog

This is the first post in this example Blog.

### Testing Liquid-immunity via `raw`



- Test of `{{ site.baseurl }}`: {{ site.baseurl }}
- Test of `{{ page.path }}`: {{ page.path }}



### Tunnel Links

[Smartdown Tour](:@/posts/ABriefTourOfSmartdown.md)
[Welcome To My Blog](:@/posts/WelcomeToMyBlog.md)

### Lorem Ipsum

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Proin libero nunc consequat interdum varius sit amet. Placerat vestibulum lectus mauris ultrices eros in cursus turpis. Vel pretium lectus quam id. Morbi quis commodo odio aenean sed adipiscing diam donec. Non tellus orci ac auctor. Nisl rhoncus mattis rhoncus urna neque viverra justo. Amet est placerat in egestas erat. Risus at ultrices mi tempus imperdiet nulla. Sit amet dictum sit amet. Mi bibendum neque egestas congue. Ut venenatis tellus in metus vulputate eu.

Sed tempus urna et pharetra pharetra massa massa ultricies mi. Potenti nullam ac tortor vitae purus faucibus ornare suspendisse. Quis commodo odio aenean sed adipiscing diam donec adipiscing. Faucibus purus in massa tempor nec feugiat nisl pretium fusce. Amet purus gravida quis blandit turpis cursus in. Dictumst vestibulum rhoncus est pellentesque elit ullamcorper dignissim cras. Aliquam sem et tortor consequat id porta nibh venenatis cras. A scelerisque purus semper eget duis. Hac habitasse platea dictumst vestibulum rhoncus est pellentesque. Dolor sit amet consectetur adipiscing elit ut aliquam. Volutpat blandit aliquam etiam erat velit. Neque aliquam vestibulum morbi blandit.


### Math Ipsum via [Math Ipsum](http://makesum.com/math#9581)

Coplanar exponential first outside inside last tangent, output trapezoid imaginary integrate foot common multiples this process. Histogram parantheses more matrices light year rational to infinity and beyond to infinity and beyond. Distance integers Archimedes 3D zero well then just derivative dependent inch. Zaxis chord mean i Archimedes algorithm solve the equation. Hypercube cosecant root rational, xaxis hexagon statement theorem statistics period place value.

Input Going to create SSS quartic hypercube warp speed arcsine. Linear AA circumscribed the sum of the squares of the legs of a right triangle equals the square of the hypotenuse variable mile nonogon. Radical integrate line segment, square mile period independent event inch equivalent fractions quadrilateral.

---

The source for this page is at [`/posts/WelcomeToMyBlog.md`](/posts/WelcomeToMyBlog.md).</content><author><name>First Lastname</name></author><category term="welcome" /><category term="smartdown" /><summary type="html">## Welcome to My Smartdown-enabled Blog This is the first post in this example Blog. ### Testing Liquid-immunity via `raw` - Test of `{{ site.baseurl }}`: {{ site.baseurl }} - Test of `{{ page.path }}`: {{ page.path }} ### Tunnel Links [Smartdown Tour](:@/posts/ABriefTourOfSmartdown.md) [Welcome To My Blog](:@/posts/WelcomeToMyBlog.md) ### Lorem Ipsum Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Proin libero nunc consequat interdum varius sit amet. Placerat vestibulum lectus mauris ultrices eros in cursus turpis. Vel pretium lectus quam id. Morbi quis commodo odio aenean sed adipiscing diam donec. Non tellus orci ac auctor. Nisl rhoncus mattis rhoncus urna neque viverra justo. Amet est placerat in egestas erat. Risus at ultrices mi tempus imperdiet nulla. Sit amet dictum sit amet. Mi bibendum neque egestas congue. Ut venenatis tellus in metus vulputate eu. Sed tempus urna et pharetra pharetra massa massa ultricies mi. Potenti nullam ac tortor vitae purus faucibus ornare suspendisse. Quis commodo odio aenean sed adipiscing diam donec adipiscing. Faucibus purus in massa tempor nec feugiat nisl pretium fusce. Amet purus gravida quis blandit turpis cursus in. Dictumst vestibulum rhoncus est pellentesque elit ullamcorper dignissim cras. Aliquam sem et tortor consequat id porta nibh venenatis cras. A scelerisque purus semper eget duis. Hac habitasse platea dictumst vestibulum rhoncus est pellentesque. Dolor sit amet consectetur adipiscing elit ut aliquam. Volutpat blandit aliquam etiam erat velit. Neque aliquam vestibulum morbi blandit. ### Math Ipsum via [Math Ipsum](http://makesum.com/math#9581) Coplanar exponential first outside inside last tangent, output trapezoid imaginary integrate foot common multiples this process. Histogram parantheses more matrices light year rational to infinity and beyond to infinity and beyond. Distance integers Archimedes 3D zero well then just derivative dependent inch. Zaxis chord mean i Archimedes algorithm solve the equation. Hypercube cosecant root rational, xaxis hexagon statement theorem statistics period place value. Input Going to create SSS quartic hypercube warp speed arcsine. Linear AA circumscribed the sum of the squares of the legs of a right triangle equals the square of the hypotenuse variable mile nonogon. Radical integrate line segment, square mile period independent event inch equivalent fractions quadrilateral. --- The source for this page is at [`/posts/WelcomeToMyBlog.md`](/posts/WelcomeToMyBlog.md).</summary></entry></feed>